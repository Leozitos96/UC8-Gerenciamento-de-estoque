<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAABF5SURBVHhe7Z1prC5ZVYabGWwmaURkEmyVSRMMGicSNcEY
        CRj/EBQRFRWjkBAaFe0fCglRIjGKiglqoiIxwh8HkB8CKkKjONCBiMgQEGikERFoupka0HepFY7Xd68+
        555V+1tf1fMkT0Loe+/Z9Z6v1rdr165VlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAwJm4m3yyfIX8D/kJ+QZ5pbxUAsDGuL18nHyZvFH+58C3yftJADhy
        biUfKX9f3iDdCe98o7yNBIAj5KHyufL90p3gp/EJEgCOhAfJZ8i3S3dCn9VXSgBozH3k02Us4LmT+Dx+
        SAJAM+4if0S+Sn5GupO3wuskADTgdvIx8o/lJ6U7Yau9SgLAgbiF/Db5uzK+jd1JuqZPlAAwma+VsYJ/
        rXQn5gxfI6MAAcAE7i+fKWMTjjshZ/rn8jIJACtyD/lU+ffSnYgz/ax8rXys5JsfYCXuJB8vXyKz7biz
        fLOMvQNfJgFgBWJL7aPkC+T10p2IM32vjDWGh0kAWIGbyzjB4kT7gHQn4kw/LKMARSG6pQSAFXiwjCn1
        O6Q7EWcaj/jGpUZccnyeBIAViO24T5FXS3cizjR2BsYtvBjPXSUArMDSUCNWzmMF3Z2MM/0HeYWMOwt7
        IPZK/JJ8q4x1lWvkH8r4ncTvBqCc2I77aBnT6k9JdyLO9F0y1hgeIvfAfWU8+PQW6fJY/LSMWVDsZLyD
        BLho4p74w2UsoH1Uug/cTD8ony9jgfFmcuvcU8blTJzQLo+b8uMyCnYU7ltLgFNR0VCjyo/JF8tYwY8O
        P1vnznKNvRLR+zAKeRT0PRRPOCPVDTXOY0xjXy7jRIheflvntnLZK3GW1mUX63tkFPgo9LBj7iXPM8Ws
        NrYFx3j2sJC17JWIS5qPSJfHDN8ko/BfLmEHLFPM+IZds6HGad3bBzD2Sjxbvk+6PA7pngrwrlimmHEt
        PauhRuYyBd3LdtwHyihycdvO5dHNvV2CbZIuU8zF6LG3LELF2LbOeVfwu7i3Rdijp9MUc2+3oU6u4Me3
        qMvkmN3bbdij4bSbRGa4bMeNjSh3lFun2+XVLGMjVnzRPEDCAYhtr8sUs8N23FjMiyJ0d7l1YoPUcnl1
        iH6F3VwWcuOLCFYkGmr8gIyXWnaYYv6z/Bn5pXLrxJT3G+Svyg4bpP5d/rp8hHyW7PAEZnwm47MZn9H4
        rEIB3RpqxAdvT9eBywapDv0Kb2pNZdnBeciGqos8jn0OaKhxWDptkIpv1WVN5bQP93R7hoOGLKeka0ON
        Pbwz//Nlpw1Sy6acL5TnodtTnLRku4CuDTW+QG6dbiv4/yTjC2CtJqXxWrWYSXRZON5tU9aYBv2g7NJQ
        I4rPj8uY+m6d2MwSC2cvlB2mx7Er8jlydl+DWLiNBdxYyHXjmunSlv175eYvEWJ19K+lC2KmcZkRq8ex
        yLV1YrHyG+XzZIc1lXg09zfkN8sOuyK/WkaHoX+VbrwzfZ3cbDu3WJz5K+kOfIb/Jn9Nxu2sPazgf4X8
        Ofkv0uUx02VL7XfKuLPTkfh8fqv8HXnI7eOvlpvcLh5vnnEHvKZx6zCmuzHt3cMK7BfLn5JvlC6PmcYK
        /p/J75PHtityWTz8I3mI9ZHvkpvjL6U72GpjtfelMgrOHlbwY8r4ozK+OTqsqcQ0NhZSt7Irclk8fJWc
        dYckXgW/Oda8/owPfqzu/pjcQ0vsKGzfI6PQdbi9Fc9h/Kzc+op23LWKLd9rz7DiNujmcAd6XpdbR3vY
        jntyg0uHPfh72xUZLJuk1n6pKwUgMfrA72kzRacmpXvc1XaILlIUgAtcGmrEBy++CbfOsiuyQ5PSve2K
        DA69SYoCIJeHP/byQMW9ZUwv400/Lo+ZntwVuZfXjHXqIkUBkHtoqBFbjp8kr5IdVvBfL58mo6XXXvga
        +cuyU6NSCoDcKrxm7PDEfolYze+wFdhJAZBbotsjqnvsb9ftYaBMCoA8dk72NeA1Y4eh22zrtFIA5LES
        U+lfkO+W7rhmGivYfyJja+leOtNEt6Aocn8go+i5XGYaxT9aqbn/NpICII+Jpa9BLKK5Y5ltfIBiPHt6
        y033l7q6PzeSAiC7062vQWxPjYWtKEZ7odMTj3GJEZca8QyKm225vzOSAiA706WvQXzwf15+pdwLsV/i
        J+UbpMtkpmd5BsX9/ZEUANmVQ/c1WFpi72kFP3oWxgp+PFHaoWdhvAvgSnmWdwG4f2ckBUB2JZ7Cc+Nd
        0729ZixYtuPGrdMbpMtlpud9BsX9myMpALIrs/oa3ChfJh8n9/KW2mW/xG/LDi91jfZlvykr2pe5f38k
        BUB2Ze2+evHLjxX8PbxmbGF5qWuHvnxrvdTD/ayRFADZFTfW87p2S+yOLM01OmzHPfnw02VyDdzPHUkB
        kF1xY70Y99bXIOi2HXfmiz3dzx9JAZBdcWM9rSf7GuyloUbHh58O8WpvN5aRFADZFTfWzD2+KJKHn/4/
        blwjKQCyK26smXvoaxDEiRUnWOxRiL0KLouZRuH5PfntssNsy41xJAVAdsWNNXPrdHqFeLyLIHr3xWyr
        261TN96RFADZFTfWzC0SHYNixTwW89wxzzZOmO4PP7lxj6QAyK64sWZuhaU7bqxnxCYld6wzXVbwj6Ul
        vDuGkRQA2RU31sxjJt7jt6XtuIfEHc9ICoDsihtr5rFxspNRh8W8rbSEd8c2kgIgu+LGmnksLO8ieKd0
        xzHTLd46dcc5kgIgu+LGmtmZpZPR1dKNfaYztuMeEnfMIykAsiturJndiCl+9AiMTkZuvLP9O/lU+UVy
        y7hjH0kBkF1xY83sRHSt+VvpxjnT2DPwTHl/uRdcDiMpALIrbqyZXYjmlIdsWnqt/BX5dXKPuExGUgBk
        V9xYM7vww9KNb033+C6CES6fkRQA2RU31swuzNq1t3TH/W65l4efToPLaiQFQHbFjTWzC2vf048Pbfft
        uIfEZTaSAiC74saa2QU3tvP6j/KnZbxsE3JcfiMpALIrbqyZXXBjuxj32MmoApflSAqA7Ioba2YX3NhO
        61a24x4Sl+tICoDsihtrZhfc2DKXdxHsqZPRmriMR1IAZFfO0uLqOtkFN77MvXQymoXLeCQFQHYlfjlu
        vM7YddcFN75MqMVlPJICILvyE9KN13mF7IIbXybU4jIeSQGQXblUnuZlFm+W0RK7C26MmVCLy3gkBUB2
        5nKZFYE4+b9EdsKNMxNqcRmPpADI7sTK+NPk6+T1/2v875j2d/rmX3AZZ0ItLuORFAAJtbiMM6EWl/FI
        CoCEWlzGmVCLy3gkBUBCLS7jTKjFZTySAiChFpdxJtTiMh5JAZBQi8s4E2pxGY+kAEioxWWcCbW4jEdS
        ACTU4jLOhFpcxiMpABJqcRlnQi0u45EUAAm1uIwzoRaX8UgKgIRaXMaZUIvLeCQFQEItLuNMqMVlPJIC
        IKEWl3Em1OIyHkkBkFCLyzgTanEZj6QASKjFZZwJtbiMR1IAJNTiMs6EWlzGIykAEmpxGWdCLS7jkRQA
        CbW4jDOhFpfxSAqAhFpcxplQi8t4JAVAQi0u40yoxWU8kgIgoRaXcSbU4jIeSQGQUIvLOBNqcRmPpABI
        qMVlnAm1uIxHUgAk1OIyzoRaXMYjKQASanEZZ0ItLuORFAAJtbiMM6EWl/FICoCEWlzGmVCLy3gkBUBC
        LS7jTKjFZTySAiChFpdxJtTiMh5JAZBQi8s4E2pxGY+kAEioxWWcCbW4jEdSACTU4jLOhFpcxiMpABJq
        cRlnQi0u45EUAAm1uIwzoRaX8UgKgIRaXMaZUIvLeCQFQEItLuNMqMVlPJICIKEWl3Em1OIyHkkBkFCL
        yzgTanEZj6QASKjFZZwJtbiMR1IAJNTiMs6EWlzGIykAEmpxGWdCLS7jkRQACbW4jDOhFpfxSAqAhFpc
        xplQi8t4JAVAQi0u40yoxWU8kgIgoRaXcSbU4jIeSQGQUIvLOBNqcRmPpABIqMVlnAm1uIxHUgAk1OIy
        zoRaXMYjKQASanEZZ0ItLuORFAAJtbiMM6EWl/FICoCEWlzGmVCLy3gkBUBCLS7jTKjFZTySAiChFpdx
        JtTiMh5JAZBQi8s4E2pxGY+kAEioxWWcCbW4jEdSACTU4jLOhFpcxiMpABJqcRlnQi0u45EUAAm1uIwz
        oRaX8UgKgIRaXMaZUIvLeCQFQEItLuNMqMVlPJICIKEWl3Em1OIyHkkBkFCLyzgTanEZj6QASKjFZZwJ
        tbiMR1IAJNTiMs6EWlzGIykAEmpxGWdCLS7jkRQACbW4jDOhFpfxSAqAhFpcxplQi8t4JAVAQi0u40yo
        xWU8kgIgoRaXcSbU4jIeSQGQUIvLOBNqcRmPpABIqMVlnAm1uIxHUgAk1OIyzoRaXMYjKQDyjhLqcBln
        Qh1fL13GIykA8uPyJfLR8tYSzofLOBPOxwPkM+Rbpcs3kwJwgR+SL5APlzeTcHZcrplwdu4hnyJfI12m
        p5UCkPhu+Vz5VRJOj8syE07HneTjZcxWb5Quy7NKATilb5IxzbqvhByXXyaMuY18lIxZ6fXS5XceN1kA
        PiDdwVb4afly+f2SxUOPyy0T/i83l98if0vGJanLrMq/kJvj1dIdbLUfky+S3yFZPPwcLqtM+B8eIp8j
        3yNdTmv4PLk5fki6g11TFg8/h8snc8/cW8Zi3uuly2Ztv0lujlvJuLZxBzzDd8pnyQfJPeIyydwbd5VP
        klfJz0qXyQz/VG6Wy+TfSHfgM43KfoWM2zZ7weWQuQculY+VL5Wfki6Hmca5cQe5aWIx5THytfKQlTbc
        0+KhO/7MrXJL+Qj5QrnGCv7FeI28Ut5W7or7yLjWulq6YGa69Z2H7pgzt8ZDZewfuVa6453th2WsT8Xt
        xChKu+fBMu7pv0O6wGa6xcVDd5yZW+CB8mK3467hJ2R8ycTGobj8AENcIjxMRrVec+/Aad3KzkN3bJnH
        StV23Co/I2MsMaZYaIQzsPaOq7N6zDsP3fFkHhNrbMc9r8tn5X4SCuj0S16q+hPlsSweuuPI7M7JL4cb
        pDuG2b5LxmwxNg/Bipyc5h36TsKxLB66sWd2pNvlYfhB+XwZ4+JJ1QMQ0/Gny7dI9wuaaefFQzfezE50
        WiAOY7v5i2XMQGKDGzQhPijPlu+T7hc3026Lh26MmYdm2Y7b4RZxuOwZicvQ20tozDJVjKnZR6T7hc60
        w+KhG1fmIbiLjBMsTrRDX9otxvb1KER3k3CExO6qmKrFlO2T0v2SZ3nIxUM3nsxZ3E7G+kmso3TYjhsu
        BftyCRviznL5homT0f3yZzl78dCNIXNNbiFjnSTWS66T7ufPNh73jUu2mDnCDriX7LJhZMbiofu5mWvQ
        bTsuj4vDfxOPCMeU7+3SfVBmutbioftZmVUs23HfJt3PmS3dpiFl+ZZ6v3QfoJlWLh66fz/zPNxTdpld
        hce4cQsOzMnr1I9K98GaZcUH2P27mWel63bc2CNydwlw0XRaqb7YKaz7tzJPQ8ftuNH5KfaCfLkEKCfu
        Vcc3cXwjH/pe9VkWsdzfzxzRcTvueyUr+DCdTg1Nbmrx0P2dzAtZtuPGN6z787OloQa0otN+dbd46P5c
        ZtCpwIU01ID2xBR51gskbsqTPQ/df8+Mno3u/59tLIC+Uj5BxkYugKOhW0OTY3KZxdBQAzZBx9tk3aSh
        BuyCTg1NDi0NNWDXdGpoMksaagAYOjU0qZaGGgCnpFtDk/NIQw2Ac9CpoclppaEGwAp0amhyoTTUAJhI
        h4YmNNQAaMDMhiY01ABozBoNTWioAXBkVDQ0oaEGwAY4S0MTGmoAbJi4H/9k+Qq5PK14jfxFGZcPAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwKi655L8A
        becsw9MFtHMAAAAASUVORK5CYII=
</value>
  </data>
</root>