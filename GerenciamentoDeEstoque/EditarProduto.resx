<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>