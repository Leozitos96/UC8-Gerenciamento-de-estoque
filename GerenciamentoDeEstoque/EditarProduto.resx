<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>